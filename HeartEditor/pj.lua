UI2D = require "ui2d..ui2d"
lovr.graphics.setBackgroundColor( 0.2, 0.2, 0.7 )

local tex3d = lovr.graphics.newTexture( 500, 500 )
---@diagnostic disable-next-line: undefined-field
local pass3d = lovr.graphics.newPass( tex3d )

local threed_x_value = 0
local threed_x_previous = 0
local threed_x_offset = 0
local threed_held = false


function ThreeDimentional(ps, held, hovered, mx, my)

	if not threed_held then
		if held then
			threed_held = true
			threed_x_offset = mx
		end
	else
		if held then
			threed_x_value = math.floor((mx - threed_x_offset) * 0.1) + threed_x_previous
		else
			threed_held = false
			threed_x_previous = threed_x_value
		end
	end

	pass3d:reset()
	
    pass3d:setClear( { 0, 0, 0 } )
    
	pass3d:setViewPose(1,lovr.math.newMat4():translate(-250,250,0))
	
	pass3d:setColor( 1, 1, 1 )
    pass3d:sphere(0 + threed_x_value,1,-50,1)

	pass3d:skybox(skybox)

	ps:setClear( { 0, 0, 0 } )
    ps:setMaterial( tex3d )
    ps:plane( 0, 0, 0, 500, 500 )

end

function lovr.load()
	UI2D.Init()
	skybox = lovr.graphics.newTexture({
		left = 'negx.jpg',
		right = 'posx.jpg',
		top = 'posy.jpg',
		bottom = 'negy.jpg',
		front = 'negz.jpg',
		back = 'posz.jpg'
	  })
end

function lovr.keypressed( key, scancode, repeating )
	UI2D.KeyPressed( key, repeating )
end

function lovr.textinput( text, code )
	UI2D.TextInput( text )
end

function lovr.keyreleased( key, scancode )
	UI2D.KeyReleased()
end

function lovr.wheelmoved( deltaX, deltaY )
	UI2D.WheelMoved( deltaX, deltaY )
end

function lovr.update( dt )
	UI2D.InputInfo()
end

function lovr.draw( pass )
	pass:setProjection( 1, mat4():orthographic( pass:getDimensions() ) )

    UI2D.Begin( "Custom Widget 3D drawing", 100, 0 )
    local ps, clicked, held, released, hovered, mx, my, wheelx, wheely = UI2D.CustomWidget( "widget1", 450, 450 )
    ThreeDimentional( ps, held, hovered, mx, my )
	UI2D.Label(threed_held)
	UI2D.Label(threed_x_value)
    UI2D.End( pass )

	-- This marks the end of the GUI.
	-- RenderFrame returns a table of passes generated by UI2D.
	-- Insert the main pass into that table and call lovr.graphics.submit.
	local ui_passes = UI2D.RenderFrame( pass )
	table.insert( ui_passes, pass3d )
	table.insert( ui_passes, pass )

	return lovr.graphics.submit( ui_passes )
	
end
